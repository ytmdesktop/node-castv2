// source: cast_channel.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

import jspb from "google-protobuf";
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.extensions.api.cast_channel.AuthChallenge', null, global);
goog.exportSymbol('proto.extensions.api.cast_channel.AuthError', null, global);
goog.exportSymbol('proto.extensions.api.cast_channel.AuthError.ErrorType', null, global);
goog.exportSymbol('proto.extensions.api.cast_channel.AuthResponse', null, global);
goog.exportSymbol('proto.extensions.api.cast_channel.CastMessage', null, global);
goog.exportSymbol('proto.extensions.api.cast_channel.CastMessage.PayloadType', null, global);
goog.exportSymbol('proto.extensions.api.cast_channel.CastMessage.ProtocolVersion', null, global);
goog.exportSymbol('proto.extensions.api.cast_channel.DeviceAuthMessage', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extensions.api.cast_channel.CastMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extensions.api.cast_channel.CastMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extensions.api.cast_channel.CastMessage.displayName = 'proto.extensions.api.cast_channel.CastMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extensions.api.cast_channel.AuthChallenge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extensions.api.cast_channel.AuthChallenge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extensions.api.cast_channel.AuthChallenge.displayName = 'proto.extensions.api.cast_channel.AuthChallenge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extensions.api.cast_channel.AuthResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.extensions.api.cast_channel.AuthResponse.repeatedFields_, null);
};
goog.inherits(proto.extensions.api.cast_channel.AuthResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extensions.api.cast_channel.AuthResponse.displayName = 'proto.extensions.api.cast_channel.AuthResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extensions.api.cast_channel.AuthError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extensions.api.cast_channel.AuthError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extensions.api.cast_channel.AuthError.displayName = 'proto.extensions.api.cast_channel.AuthError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.extensions.api.cast_channel.DeviceAuthMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.extensions.api.cast_channel.DeviceAuthMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.extensions.api.cast_channel.DeviceAuthMessage.displayName = 'proto.extensions.api.cast_channel.DeviceAuthMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.extensions.api.cast_channel.CastMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extensions.api.cast_channel.CastMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extensions.api.cast_channel.CastMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
protocolVersion: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
sourceId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
destinationId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
namespace: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
payloadType: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
payloadUtf8: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
payloadBinary: msg.getPayloadBinary_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extensions.api.cast_channel.CastMessage}
 */
proto.extensions.api.cast_channel.CastMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extensions.api.cast_channel.CastMessage;
  return proto.extensions.api.cast_channel.CastMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extensions.api.cast_channel.CastMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extensions.api.cast_channel.CastMessage}
 */
proto.extensions.api.cast_channel.CastMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.extensions.api.cast_channel.CastMessage.ProtocolVersion} */ (reader.readEnum());
      msg.setProtocolVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 5:
      var value = /** @type {!proto.extensions.api.cast_channel.CastMessage.PayloadType} */ (reader.readEnum());
      msg.setPayloadType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayloadUtf8(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayloadBinary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extensions.api.cast_channel.CastMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extensions.api.cast_channel.CastMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extensions.api.cast_channel.CastMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.extensions.api.cast_channel.CastMessage.ProtocolVersion} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {!proto.extensions.api.cast_channel.CastMessage.PayloadType} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBytes(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.extensions.api.cast_channel.CastMessage.ProtocolVersion = {
  CASTV2_1_0: 0
};

/**
 * @enum {number}
 */
proto.extensions.api.cast_channel.CastMessage.PayloadType = {
  STRING: 0,
  BINARY: 1
};

/**
 * required ProtocolVersion protocol_version = 1;
 * @return {!proto.extensions.api.cast_channel.CastMessage.ProtocolVersion}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.getProtocolVersion = function() {
  return /** @type {!proto.extensions.api.cast_channel.CastMessage.ProtocolVersion} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.extensions.api.cast_channel.CastMessage.ProtocolVersion} value
 * @return {!proto.extensions.api.cast_channel.CastMessage} returns this
 */
proto.extensions.api.cast_channel.CastMessage.prototype.setProtocolVersion = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extensions.api.cast_channel.CastMessage} returns this
 */
proto.extensions.api.cast_channel.CastMessage.prototype.clearProtocolVersion = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.hasProtocolVersion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string source_id = 2;
 * @return {string}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.getSourceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.extensions.api.cast_channel.CastMessage} returns this
 */
proto.extensions.api.cast_channel.CastMessage.prototype.setSourceId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extensions.api.cast_channel.CastMessage} returns this
 */
proto.extensions.api.cast_channel.CastMessage.prototype.clearSourceId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.hasSourceId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string destination_id = 3;
 * @return {string}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.getDestinationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.extensions.api.cast_channel.CastMessage} returns this
 */
proto.extensions.api.cast_channel.CastMessage.prototype.setDestinationId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extensions.api.cast_channel.CastMessage} returns this
 */
proto.extensions.api.cast_channel.CastMessage.prototype.clearDestinationId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.hasDestinationId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required string namespace = 4;
 * @return {string}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.extensions.api.cast_channel.CastMessage} returns this
 */
proto.extensions.api.cast_channel.CastMessage.prototype.setNamespace = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extensions.api.cast_channel.CastMessage} returns this
 */
proto.extensions.api.cast_channel.CastMessage.prototype.clearNamespace = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.hasNamespace = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required PayloadType payload_type = 5;
 * @return {!proto.extensions.api.cast_channel.CastMessage.PayloadType}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.getPayloadType = function() {
  return /** @type {!proto.extensions.api.cast_channel.CastMessage.PayloadType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.extensions.api.cast_channel.CastMessage.PayloadType} value
 * @return {!proto.extensions.api.cast_channel.CastMessage} returns this
 */
proto.extensions.api.cast_channel.CastMessage.prototype.setPayloadType = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extensions.api.cast_channel.CastMessage} returns this
 */
proto.extensions.api.cast_channel.CastMessage.prototype.clearPayloadType = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.hasPayloadType = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string payload_utf8 = 6;
 * @return {string}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.getPayloadUtf8 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.extensions.api.cast_channel.CastMessage} returns this
 */
proto.extensions.api.cast_channel.CastMessage.prototype.setPayloadUtf8 = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extensions.api.cast_channel.CastMessage} returns this
 */
proto.extensions.api.cast_channel.CastMessage.prototype.clearPayloadUtf8 = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.hasPayloadUtf8 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes payload_binary = 7;
 * @return {!(string|Uint8Array)}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.getPayloadBinary = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes payload_binary = 7;
 * This is a type-conversion wrapper around `getPayloadBinary()`
 * @return {string}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.getPayloadBinary_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayloadBinary()));
};


/**
 * optional bytes payload_binary = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayloadBinary()`
 * @return {!Uint8Array}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.getPayloadBinary_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayloadBinary()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.extensions.api.cast_channel.CastMessage} returns this
 */
proto.extensions.api.cast_channel.CastMessage.prototype.setPayloadBinary = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extensions.api.cast_channel.CastMessage} returns this
 */
proto.extensions.api.cast_channel.CastMessage.prototype.clearPayloadBinary = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extensions.api.cast_channel.CastMessage.prototype.hasPayloadBinary = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extensions.api.cast_channel.AuthChallenge.prototype.toObject = function(opt_includeInstance) {
  return proto.extensions.api.cast_channel.AuthChallenge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extensions.api.cast_channel.AuthChallenge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extensions.api.cast_channel.AuthChallenge.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extensions.api.cast_channel.AuthChallenge}
 */
proto.extensions.api.cast_channel.AuthChallenge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extensions.api.cast_channel.AuthChallenge;
  return proto.extensions.api.cast_channel.AuthChallenge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extensions.api.cast_channel.AuthChallenge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extensions.api.cast_channel.AuthChallenge}
 */
proto.extensions.api.cast_channel.AuthChallenge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extensions.api.cast_channel.AuthChallenge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extensions.api.cast_channel.AuthChallenge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extensions.api.cast_channel.AuthChallenge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extensions.api.cast_channel.AuthChallenge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.extensions.api.cast_channel.AuthResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.extensions.api.cast_channel.AuthResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extensions.api.cast_channel.AuthResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extensions.api.cast_channel.AuthResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
signature: msg.getSignature_asB64(),
clientAuthCertificate: msg.getClientAuthCertificate_asB64(),
clientCaList: msg.getClientCaList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extensions.api.cast_channel.AuthResponse}
 */
proto.extensions.api.cast_channel.AuthResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extensions.api.cast_channel.AuthResponse;
  return proto.extensions.api.cast_channel.AuthResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extensions.api.cast_channel.AuthResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extensions.api.cast_channel.AuthResponse}
 */
proto.extensions.api.cast_channel.AuthResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClientAuthCertificate(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addClientCa(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extensions.api.cast_channel.AuthResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extensions.api.cast_channel.AuthResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extensions.api.cast_channel.AuthResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getClientCaList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
};


/**
 * required bytes signature = 1;
 * @return {!(string|Uint8Array)}
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * required bytes signature = 1;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * required bytes signature = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.extensions.api.cast_channel.AuthResponse} returns this
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.setSignature = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extensions.api.cast_channel.AuthResponse} returns this
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.clearSignature = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required bytes client_auth_certificate = 2;
 * @return {!(string|Uint8Array)}
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.getClientAuthCertificate = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * required bytes client_auth_certificate = 2;
 * This is a type-conversion wrapper around `getClientAuthCertificate()`
 * @return {string}
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.getClientAuthCertificate_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClientAuthCertificate()));
};


/**
 * required bytes client_auth_certificate = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClientAuthCertificate()`
 * @return {!Uint8Array}
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.getClientAuthCertificate_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClientAuthCertificate()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.extensions.api.cast_channel.AuthResponse} returns this
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.setClientAuthCertificate = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extensions.api.cast_channel.AuthResponse} returns this
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.clearClientAuthCertificate = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.hasClientAuthCertificate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated bytes client_ca = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.getClientCaList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes client_ca = 3;
 * This is a type-conversion wrapper around `getClientCaList()`
 * @return {!Array<string>}
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.getClientCaList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getClientCaList()));
};


/**
 * repeated bytes client_ca = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClientCaList()`
 * @return {!Array<!Uint8Array>}
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.getClientCaList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getClientCaList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.extensions.api.cast_channel.AuthResponse} returns this
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.setClientCaList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.extensions.api.cast_channel.AuthResponse} returns this
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.addClientCa = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.extensions.api.cast_channel.AuthResponse} returns this
 */
proto.extensions.api.cast_channel.AuthResponse.prototype.clearClientCaList = function() {
  return this.setClientCaList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extensions.api.cast_channel.AuthError.prototype.toObject = function(opt_includeInstance) {
  return proto.extensions.api.cast_channel.AuthError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extensions.api.cast_channel.AuthError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extensions.api.cast_channel.AuthError.toObject = function(includeInstance, msg) {
  var f, obj = {
errorType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extensions.api.cast_channel.AuthError}
 */
proto.extensions.api.cast_channel.AuthError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extensions.api.cast_channel.AuthError;
  return proto.extensions.api.cast_channel.AuthError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extensions.api.cast_channel.AuthError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extensions.api.cast_channel.AuthError}
 */
proto.extensions.api.cast_channel.AuthError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.extensions.api.cast_channel.AuthError.ErrorType} */ (reader.readEnum());
      msg.setErrorType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extensions.api.cast_channel.AuthError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extensions.api.cast_channel.AuthError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extensions.api.cast_channel.AuthError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extensions.api.cast_channel.AuthError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.extensions.api.cast_channel.AuthError.ErrorType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.extensions.api.cast_channel.AuthError.ErrorType = {
  INTERNAL_ERROR: 0,
  NO_TLS: 1
};

/**
 * required ErrorType error_type = 1;
 * @return {!proto.extensions.api.cast_channel.AuthError.ErrorType}
 */
proto.extensions.api.cast_channel.AuthError.prototype.getErrorType = function() {
  return /** @type {!proto.extensions.api.cast_channel.AuthError.ErrorType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.extensions.api.cast_channel.AuthError.ErrorType} value
 * @return {!proto.extensions.api.cast_channel.AuthError} returns this
 */
proto.extensions.api.cast_channel.AuthError.prototype.setErrorType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.extensions.api.cast_channel.AuthError} returns this
 */
proto.extensions.api.cast_channel.AuthError.prototype.clearErrorType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extensions.api.cast_channel.AuthError.prototype.hasErrorType = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.extensions.api.cast_channel.DeviceAuthMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.extensions.api.cast_channel.DeviceAuthMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.extensions.api.cast_channel.DeviceAuthMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extensions.api.cast_channel.DeviceAuthMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
challenge: (f = msg.getChallenge()) && proto.extensions.api.cast_channel.AuthChallenge.toObject(includeInstance, f),
response: (f = msg.getResponse()) && proto.extensions.api.cast_channel.AuthResponse.toObject(includeInstance, f),
error: (f = msg.getError()) && proto.extensions.api.cast_channel.AuthError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.extensions.api.cast_channel.DeviceAuthMessage}
 */
proto.extensions.api.cast_channel.DeviceAuthMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.extensions.api.cast_channel.DeviceAuthMessage;
  return proto.extensions.api.cast_channel.DeviceAuthMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.extensions.api.cast_channel.DeviceAuthMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.extensions.api.cast_channel.DeviceAuthMessage}
 */
proto.extensions.api.cast_channel.DeviceAuthMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.extensions.api.cast_channel.AuthChallenge;
      reader.readMessage(value,proto.extensions.api.cast_channel.AuthChallenge.deserializeBinaryFromReader);
      msg.setChallenge(value);
      break;
    case 2:
      var value = new proto.extensions.api.cast_channel.AuthResponse;
      reader.readMessage(value,proto.extensions.api.cast_channel.AuthResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    case 3:
      var value = new proto.extensions.api.cast_channel.AuthError;
      reader.readMessage(value,proto.extensions.api.cast_channel.AuthError.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.extensions.api.cast_channel.DeviceAuthMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.extensions.api.cast_channel.DeviceAuthMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.extensions.api.cast_channel.DeviceAuthMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.extensions.api.cast_channel.DeviceAuthMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChallenge();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.extensions.api.cast_channel.AuthChallenge.serializeBinaryToWriter
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.extensions.api.cast_channel.AuthResponse.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.extensions.api.cast_channel.AuthError.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthChallenge challenge = 1;
 * @return {?proto.extensions.api.cast_channel.AuthChallenge}
 */
proto.extensions.api.cast_channel.DeviceAuthMessage.prototype.getChallenge = function() {
  return /** @type{?proto.extensions.api.cast_channel.AuthChallenge} */ (
    jspb.Message.getWrapperField(this, proto.extensions.api.cast_channel.AuthChallenge, 1));
};


/**
 * @param {?proto.extensions.api.cast_channel.AuthChallenge|undefined} value
 * @return {!proto.extensions.api.cast_channel.DeviceAuthMessage} returns this
*/
proto.extensions.api.cast_channel.DeviceAuthMessage.prototype.setChallenge = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extensions.api.cast_channel.DeviceAuthMessage} returns this
 */
proto.extensions.api.cast_channel.DeviceAuthMessage.prototype.clearChallenge = function() {
  return this.setChallenge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extensions.api.cast_channel.DeviceAuthMessage.prototype.hasChallenge = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AuthResponse response = 2;
 * @return {?proto.extensions.api.cast_channel.AuthResponse}
 */
proto.extensions.api.cast_channel.DeviceAuthMessage.prototype.getResponse = function() {
  return /** @type{?proto.extensions.api.cast_channel.AuthResponse} */ (
    jspb.Message.getWrapperField(this, proto.extensions.api.cast_channel.AuthResponse, 2));
};


/**
 * @param {?proto.extensions.api.cast_channel.AuthResponse|undefined} value
 * @return {!proto.extensions.api.cast_channel.DeviceAuthMessage} returns this
*/
proto.extensions.api.cast_channel.DeviceAuthMessage.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extensions.api.cast_channel.DeviceAuthMessage} returns this
 */
proto.extensions.api.cast_channel.DeviceAuthMessage.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extensions.api.cast_channel.DeviceAuthMessage.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AuthError error = 3;
 * @return {?proto.extensions.api.cast_channel.AuthError}
 */
proto.extensions.api.cast_channel.DeviceAuthMessage.prototype.getError = function() {
  return /** @type{?proto.extensions.api.cast_channel.AuthError} */ (
    jspb.Message.getWrapperField(this, proto.extensions.api.cast_channel.AuthError, 3));
};


/**
 * @param {?proto.extensions.api.cast_channel.AuthError|undefined} value
 * @return {!proto.extensions.api.cast_channel.DeviceAuthMessage} returns this
*/
proto.extensions.api.cast_channel.DeviceAuthMessage.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.extensions.api.cast_channel.DeviceAuthMessage} returns this
 */
proto.extensions.api.cast_channel.DeviceAuthMessage.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.extensions.api.cast_channel.DeviceAuthMessage.prototype.hasError = function() {
  return jspb.Message.getField(this, 3) != null;
};

export const { AuthChallenge, AuthError, AuthResponse, CastMessage, DeviceAuthMessage } = proto.extensions.api.cast_channel;
export default proto.extensions.api.cast_channel;
//goog.object.extend(exports, proto.extensions.api.cast_channel);
